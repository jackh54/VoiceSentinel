{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-07-08T05:07:36+00:00",
    "name": "VoiceSentinel Processor",
    "author": "panda@pandadevv.dev",
    "description": null,
    "features": null,
    "docker_images": {
        "ghcr.io\/parkervcp\/yolks:python_3.10": "ghcr.io\/parkervcp\/yolks:python_3.10"
    },
    "file_denylist": [],
    "startup": "export TMPDIR=\/home\/container\/tmp && mkdir -p $TMPDIR && python3 -m pip install --no-cache-dir -r requirements.txt && python3 -m uvicorn app.main:app --host 0.0.0.0 --port {{SERVER_PORT}} --workers {{httpworkers}}",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Uvicorn running\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\n# Update system and install dependencies\r\napt update\r\napt install -y python3 python3-pip python3-venv ffmpeg curl jq unzip\r\n\r\ncd \/mnt\/server\r\n\r\n# Get latest release version\r\nLATEST_RELEASE=$(curl -s https:\/\/api.github.com\/repos\/jackh54\/VoiceSentinel\/releases\/latest | jq -r '.tag_name')\r\necho \"Latest release: ${LATEST_RELEASE}\"\r\n\r\n# Download and extract release\r\necho \"Downloading release...\"\r\nwget -O processor.zip https:\/\/github.com\/jackh54\/VoiceSentinel\/releases\/download\/${LATEST_RELEASE}\/processor-voicesentinel.zip\r\necho \"Extracting files...\"\r\nunzip -o processor.zip\r\necho \"Moving files from nested directory...\"\r\nmv processor-voicesentinel\/* .\r\nrm -rf processor-voicesentinel\r\necho \"Cleaning up...\"\r\nrm processor.zip\r\n\r\n# List contents to verify\r\necho \"Current directory contents:\"\r\nls -la\r\n\r\n# Create and activate virtual environment\r\necho \"Setting up Python virtual environment...\"\r\npython3 -m venv venv\r\nsource venv\/bin\/activate\r\n\r\n# Install Python dependencies\r\necho \"Installing Python dependencies...\"\r\npython3 -m pip install --upgrade pip\r\nif [ -f \"requirements.txt\" ]; then\r\n    python3 -m pip install -r requirements.txt\r\nelse\r\n    echo \"Warning: requirements.txt not found!\"\r\n    ls -la\r\n\r\necho \"Installation complete!\"",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "HTTP Workers",
            "description": "HTTP workers = 1 (unless you have >8GB RAM, then use 2), this shouldn't be greater than 4.",
            "env_variable": "httpworkers",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric|min:1|max:4",
            "field_type": "text"
        }
    ]
}